extends ../layout.jade

block style
  style.
    .pair:last-of-type .btn-danger {
      display: none;
    }

    .pair:not(:last-of-type) .btn-success {
      display: none;
    }

block content
  div.container
    div.row
      div.col-sm-6
        h2 Response

        form(name='status')
          h4 Status

          div.form-group.row
            div.col-sm-3: input.form-control(type='number', name='status', value='200', placeholder='200', required='')
            div.col-sm-9: input.form-control(type='text', name='statusText', value='OK', placeholder='OK', required='')


        form.form-horizontal(name='headers')
          h4 Headers

          div.form-group.pair
            div.col-sm-5: input.form-control(type='text', name='name', placeholder='name', required='')
            div.col-sm-5: input.form-control(type='text', name='value', placeholder='value')
            div.col-sm-2
              button.btn.btn-success.btn-block(type='button', tabindex='-1')
                span.glyphicon.glyphicon-plus
              button.btn.btn-danger.btn-block(type='button', tabindex='-1')
                span.glyphicon.glyphicon-remove

        form.form-horizontal(name='cookies')
          h4 Cookies

          div.form-group.pair
            div.col-sm-5: input.form-control(type='text', name='name', placeholder='name', required='')
            div.col-sm-5: input.form-control(type='text', name='value', placeholder='value')
            div.col-sm-2
              button.btn.btn-success.btn-block(type='button', tabindex='-1'): span.glyphicon.glyphicon-plus
              button.btn.btn-danger.btn-block(type='button', tabindex='-1'): span.glyphicon.glyphicon-remove

        form.form-horizontal(name='content')
          h4 Body

          div.form-group
            div.col-sm-6: input.form-control(type='text', name='mimeType', value='text/plain', placeholder='multipart/form-data', required='')
            div.col-sm-6: select.form-control(name='encoding')
              option(value='') No Encoding
              option(value='base64') Base64
          div.form-group
            div.col-sm-12: textarea.form-control(name='text', value='', placeholder='body content')

        form(method="POST", action="/bin/create")
          input(type='hidden', name='response', value='')
          button.btn.btn-default(type='submit') Create Bucket

      div.col-sm-6
        h2 Preview

        div#preview
          pre: code

block scripts
  script.
    var addKeyPair = function (event) {
      var self = $(this);

      var group = self.parents('.form-group');
      var form = self.parents('form');

      group.clone().appendTo(form);
    };

    var processFormData = function (event) {
      var response = {
          status: '',
          statusText: '',
          httpVersion: "HTTP/1.1",
          headers: [],
          cookies: [],
          content: {
            size: 0,
            encoding: '',
            mimeType: '',
            text: ''
          },
          redirectURL: '',
          headersSize: 0,
          bodySize: 0
        };

      $('.has-error').removeClass('has-error');

      $('.form input:not(:valid)').each(function () {
        $(this).parents('.form-group').addClass('has-error');
      });

      [{form: 'status', parent: response}, {form: 'content', parent: response.content}].forEach(function (item) {
        $('form[name="' + item.form + '"] div.form-group:not(.pair) .form-control').each(function () {
          var self = $(this);

          item.parent[self.attr('name')] = self.val();
        });
      });

      ['headers', 'cookies'].forEach(function (pair) {
        var params = [];

        $('form[name="' + pair + '"] .pair input[name="name"]').slice(0, -1).each(function (index, header) {
          var value = $(header).val();

          if (value.trim() !== '') {
            params.push({name: value});
          }
        });


        $('form[name="' + pair + '"] .pair input[name="value"]').slice(0, -1).each(function (index, header) {
          if (params[index]) {
            params[index].value = $(header).val();
          }
        });

        response[pair] = params;
      });

      // fix type issues
      response.status = parseInt(response.status);

      $('input[name="response"]').val(JSON.stringify(response));
      $('pre code').text(JSON.stringify(response, null, 2));

      hljs.highlightBlock($('pre code')[0]);
    };

    $('.toggle-comments').on('click', function (event) {
      $('.form').toggleClass('no-comments');
      $('.form  input[name="comment"]').attr('disabled', $(this).hasClass('active'));
    });

    $('form').on('click', '.form-group.pair:last-of-type .btn-success', addKeyPair);

    $('form').on('focus', '.form-group.pair:last-child input', addKeyPair);

    $('form').on('click', '.form-group.pair .btn-danger', function (event) {
      $(this).parents('.form-group').remove();
    });

    $('form').on('keyup keypress change blur', '.form-control', processFormData);
    $('form').on('click', '.btn', processFormData);

    $(document).ready(function () {
      processFormData();
    });
